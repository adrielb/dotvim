global !p
import os
from vimsnippets import complete
OBJ_TYPES=[
	  'table'
	, 'view'
	, 'trigger'
	, 'index'
]
MODE_TYPES=[
	'ascii'
	, 'csv'
	, 'column'
	, 'html'
	, 'insert'
	, 'line'
	, 'list'
	, 'tabs'
	, 'tcl'
]
endglobal

snippet .mode "Output mode" b
.mode $1`!p snip.rv=complete(t[1],MODE_TYPES)` 
endsnippet

snippet .once "Output next cmd to file" b
.once ${1:filename}
endsnippet

snippet init "no sync, WAL, fk" b
PRAGMA synchronous=OFF;
PRAGMA foreign_keys = ON;
PRAGMA journal_mode=WAL;

endsnippet

snippet check "pragma checks" b
PRAGMA integrity_check;
PRAGMA foreign_key_check; 
endsnippet

snippet create "create table" b
create table ${1:name} (
	id integer primary key autoincrement,
	${2}
);
endsnippet

snippet create "create index" b
create index ${1:name} on ${2:table} (${3:col});
endsnippet

snippet create "create view" b
create view ${1:name} as 
	select
	from 
	join
endsnippet

snippet create "create trigger" b
create trigger ${1:name}
begin;
	${0}
end;
endsnippet

snippet drop "drop table" b
drop $1`!p snip.rv=complete(t[1],OBJ_TYPES)` ${2:table};
endsnippet

snippet delete "delete statement" b
delete from ${1:table} where ${2:condition};
endsnippet

snippet insert "insert into" b
insert into ${1:table} (${2:col}) values (${3:val});
endsnippet

snippet explain "explain query plan" b
explain query plan
endsnippet

snippet update "update" b
update ${1:table} set ${2:col} = ${3:val} where ${4:condition};
endsnippet

snippet alter "alter table" b
alter table ${1:table} add column ${2:col};
endsnippet

snippet select "select" b
select
	${1:col}
from 
	${2:table}
where
	${3:exp}
endsnippet

snippet strftime "date format string"
strftime(${1:format}, ${2:timestring}, ${3:modifier})
endsnippet
	
snippet modify "completely modify a table"
PRAGMA foreign_keys=off;

BEGIN TRANSACTION;

ALTER TABLE ${1:table} RENAME TO ${2:temp_table};

CREATE TABLE $1 (
	column_definition,
);

INSERT INTO $1 (${3:column_list})
	SELECT $3
	FROM $2;

DROP TABLE $2;

COMMIT;

PRAGMA foreign_keys=on;
endsnippet
